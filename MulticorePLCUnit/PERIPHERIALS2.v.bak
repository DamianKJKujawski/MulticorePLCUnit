module PERIPHERALS
(
	input 							CLK,

	//IO:
	input	wire					PERIPHERALS_LOAD,
	
	input	wire	[15:0] 	INPUTS,
	output wire	[15:0] 	OUTPUTS,
	
	//MEMORY:
	input wire					PERIPHERALS_EN,
	input	wire					PERIPHERALS_WE,
	
	input  wire  [15:0] PERIPHERALS_writeADDR,
	input  wire  [ 7:0] PERIPHERALS_writeDATA,
	input  wire  [15:0] PERIPHERALS_readADDR,
	output wire  [ 7:0] PERIPHERALS_readDATA
);


WORD_PERIPHERALS _WORD_PERIPHERALS
(
	.CLK(CLK),
	
	.WORDPERIPHERALS_EN(PERIPHERALS_EN),
	.WORDPERIPHERALS_WE(PERIPHERALS_WE),

	.WORDPERIPHERALS_InADDR(PERIPHERALS_writeADDR),
	.WORDPERIPHERALS_InDATA(PERIPHERALS_writeDATA),

	.WORDPERIPHERALS_OutADDR(PERIPHERALS_readADDR),
	.WORDPERIPHERALS_OutDATA(PERIPHERALS_readDATA)
);



BIT_PERIPHERALS _BIT_PERIPHERALS
(
	.CLK(CLK),
	
	//CONTROL:
	.BITPERIPHERALS_EN(PERIPHERALS_EN),
	.BITPERIPHERALS_LOAD(PERIPHERALS_LOAD),
	
	//In:
  .BITPERIPHERALS_OUTPUT(OUTPUTS),
	.BITPERIPHERALS_OutADDR(PERIPHERALS_writeADDR),
	.BITPERIPHERALS_OutDATA(PERIPHERALS_writeDATA[0]),

	//Out:
	.BITPERIPHERALS_WE(PERIPHERALS_WE),
	.BITPERIPHERALS_INPUT(INPUTS),
	.BITPERIPHERALS_InADDR(PERIPHERALS_readADDR),
	.BITPERIPHERALS_InDATA(PERIPHERALS_readDATA[0])
);


endmodule 