module WRITE_ARBITER
(
	//CLK:
	input wire 			 CLK,
	
	input wire 			 WRITEARBITER_EN,
	
	//Carry in:
	input wire 			 WRITEARBITER_BIT_WE_PREV,
	input wire 			 WRITEARBITER_WORD_WE_PREV,
	
	//Driver data:
	input wire 			 WORDWRITEARBITER_WE,
	
	input wire  [7:0]  WORDWRITEARBITER_THREAD_DATA,
	input wire  [7:0]  WORDWRITEARBITER_THREAD_ADDR,

	//Output data:
	output wire			 WORDWRITEARBITER_SELECTOR,
	
	output wire [7:0]  WORDWRITEARBITER_RAM_DATA,
	output wire [7:0]  WORDWRITEARBITER_RAM_ADDR,
	
	//Ack:
	output reg			 WORDWRITEARBITER_ACK,

	//Carry out:
	output wire 		 WORDWRITEARBITER_CARRY_OUT
);


reg	WE_reg;
wire  SELECTOR_GATE;

always @(posedge CLK)
begin
	WE_reg <= WORDWRITEARBITER_WE && WORDWRITEARBITER_EN;
	WORDWRITEARBITER_ACK <= SELECTOR_GATE;
end

assign WORDWRITEARBITER_SELECTOR		= (SELECTOR_GATE) ? 1'b1 : 1'bz; 
assign SELECTOR_GATE	 					= (WORDWRITEARBITER_WE_PREV &&  WE_reg) ? 1'b1 : 1'b0;
assign WORDWRITEARBITER_CARRY_OUT 	=  WORDWRITEARBITER_WE_PREV && ~WE_reg;

assign WORDWRITEARBITER_RAM_DATA 		= (SELECTOR_GATE) ? WORDWRITEARBITER_THREAD_DATA :  1'bz; 
assign WORDWRITEARBITER_RAM_ADDR 		= (SELECTOR_GATE) ? WORDWRITEARBITER_THREAD_ADDR :  8'bz; 


endmodule 