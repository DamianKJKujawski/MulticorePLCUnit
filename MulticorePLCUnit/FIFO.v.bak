module FIFO
( 
	input wire 			CLK, 
	
	input wire 			FIFO_EN, 

	input wire 			FIFO_RD, 
	input wire 			FIFO_WR, 
	
	input wire 			FIFO_RST,
	
	input wire [7:0] 	FIFO_DataIn, 
	
	output wire 		FIFO_EMPTYSignal, 
	output wire 		FIFO_FULLSignal,
	
	output wire 		FIFO_DataOut
); 

//Registers:
reg [7:0] FIFO_Memory [0:7];

reg [2:0] Count 		= 0;  
reg [2:0] ReadCount	= 0; 
reg [2:0] WriteCount = 0;


//Assign:
assign EMPTY = (Count==0)? 1'b1:1'b0; 
assign FULL  = (Count==8)? 1'b1:1'b0; 




always @ (posedge Clk) 
begin 

 if (EN==0); 

 else begin 

  if (Rst) begin 

   readCounter = 0; 

   writeCounter = 0; 

  end 

  else if (RD ==1'b1 && Count!=0) begin 

   dataOut  = FIFO[readCounter]; 

   readCounter = readCounter+1; 

  end 

  else if (WR==1'b1 && Count<8) begin
   FIFO[writeCounter]  = dataIn; 

   writeCounter  = writeCounter+1; 

  end 

  else; 

 end 

 if (writeCounter==8) 

  writeCounter=0; 

 else if (readCounter==8) 

  readCounter=0; 

 else;

 if (readCounter > writeCounter) begin 

  Count=readCounter-writeCounter; 

 end 

 else if (writeCounter > readCounter) 

  Count=writeCounter-readCounter; 

 else;

end 

endmodule